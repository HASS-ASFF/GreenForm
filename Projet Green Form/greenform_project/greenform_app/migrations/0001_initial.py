# Generated by Django 3.2.6 on 2021-08-19 00:40

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Membre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, null=True, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('password', models.CharField(max_length=128, null=True, verbose_name='password')),
                ('type', models.CharField(choices=[('Bénévole', 'Bénévole'), ('Donateur', 'Donateur'), ('Autre', 'Autre')], max_length=30, null=True)),
                ('qr_code', models.ImageField(blank=True, upload_to='qr_codes/')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'Membres',
            },
        ),
        migrations.CreateModel(
            name='Abonnement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Etablissement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=30)),
                ('adresse', models.CharField(max_length=100)),
                ('code_postal', models.CharField(blank=True, max_length=10, null=True)),
                ('type_etablissement', models.CharField(choices=[('Ecole', 'Ecole'), ('Université', 'Université'), ('Ecole de formation', 'Ecole de formation'), ('Centre', 'Centre')], max_length=30)),
                ('representant', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Partenaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=30)),
                ('adresse', models.CharField(max_length=100)),
                ('code_postal', models.CharField(blank=True, max_length=10, null=True)),
                ('num_tel', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Centre_formation',
            fields=[
                ('membre_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='greenform_app.membre')),
                ('nom_du_centre', models.CharField(max_length=30)),
                ('code_postal', models.CharField(blank=True, max_length=10, null=True)),
                ('responsable', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'Centre de formation',
            },
            bases=('greenform_app.membre',),
        ),
        migrations.CreateModel(
            name='Personne',
            fields=[
                ('membre_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='greenform_app.membre')),
                ('nom', models.CharField(max_length=30)),
                ('prenom', models.CharField(max_length=30)),
                ('sexe', models.CharField(choices=[('H', 'Homme'), ('F', 'Femme')], max_length=30)),
                ('adresse', models.CharField(blank=True, max_length=100)),
                ('code_postal', models.CharField(blank=True, max_length=10, null=True)),
                ('num_tel', models.CharField(blank=True, max_length=30)),
            ],
            options={
                'db_table': 'Personne lambda',
            },
            bases=('greenform_app.membre',),
        ),
        migrations.CreateModel(
            name='Inscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_membre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Adherent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_abonnement', models.DateField()),
                ('id_abonnement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='greenform_app.abonnement')),
                ('id_inscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='greenform_app.inscription')),
            ],
            options={
                'db_table': 'Adhérant',
            },
        ),
        migrations.CreateModel(
            name='Activite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=30)),
                ('desc', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('id_etablissement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='greenform_app.etablissement')),
                ('id_partenaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='greenform_app.partenaire')),
                ('membres', models.ManyToManyField(related_name='Participation', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
